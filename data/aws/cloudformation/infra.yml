---
AWSTemplateFormatVersion: '2010-09-09'
Description: Cohors Infrastructure
Parameters:
  AppName:
    AllowedPattern: '\w+'
    Description: Cohors application name
    Type: String
  AZ1:
    AllowedPattern: '[ueas][supa]-[a-z]+-\d[a-z]'
    Description: First (of two) availability zone for column
    Type: String
  AZ2:
    AllowedPattern: '[ueas][supa]-[a-z]+-\d[a-z]'
    Description: Second (of two) availability zone for column
    Type: String
  Environs:
    Default: dev
    Description: Prod or Dev (non-production)
    Type: String
    AllowedValues:
    - prod
    - dev
  Region:
    Default: us-west-2
    Description: AWS EC2 Region
    Type: String
    AllowedValues:
    - us-west-1
    - us-west-2
    - us-east-1
    - eu-west-1
    - eu-central-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-northeast-1
    - ap-northeast-2
    - sa-east-1
  SecondOctet:
    Default: 0
    Description: VPC Second Octet (0-255) in 10.X.0.0/16
    MaxValue: 255
    MinValue: 0
    Type: Number
  Spoke:
    Default: core
    Description: Core or Edge
    Type: String
    AllowedValues:
    - core
    - edge
Resources:
  FirstPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ1
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.128.0/19'
      MapPublicIpOnLaunch: False
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - FirstPrivateSubnet
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - FirstPrivateSubnet
  SecondPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ2
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.160.0/19'
      MapPublicIpOnLaunch: False
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPrivateSubnet
  FirstPrivateRDSSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ1
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.192.0/19'
      MapPublicIpOnLaunch: False
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - FirstPrivateRDSSubnet
  SecondPrivateRDSSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ2
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - .224.0/19
      MapPublicIpOnLaunch: False
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPrivateRDSSubnet
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Database VPC Subnet Group
      SubnetIds:
        - Ref: FirstPrivateRDSSubnet
        - Ref: SecondPrivateRDSSubnet
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPrivateRDSSubnet
  FirstPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ1
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.0.0/18'
      MapPublicIpOnLaunch: True
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - FirstPublicSubnet
  SecondPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ2
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.64.0/18'
      MapPublicIpOnLaunch: False
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPublicSubnet
  #############################################################################
  # Route Tables
  #----------------------------------------------------------------------------
  FirstPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - FirstPublicRouteTable
  SecondPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPublicRouteTable
  FirstPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - FirstPrivateRouteTable
  SecondPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
            - '-'
            - SecondPrivateRouteTable
  #############################################################################
  # Common Security Group
  #----------------------------------------------------------------------------
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access VPC from entire subnet
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: TCP
        ToPort: 22
      - CidrIp: 10.0.0.0/8
        FromPort: -1
        IpProtocol: -1
        ToPort: -1
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: '0'
      GroupId:
        Ref: SecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: SecurityGroup
      ToPort: '65535'
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondOctet
          - '.0.0/16'
      EnableDnsSupport: True
      EnableDnsHostnames: True
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
  #############################################################################
  # Routes
  #----------------------------------------------------------------------------
  FirstPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
#        Ref: FirstNatGateway
        Ref: NatGateway
      RouteTableId:
        Ref: FirstPrivateRouteTable
  SecondPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
#        Ref: SecondNatGateway
        Ref: NatGateway
      RouteTableId:
        Ref: SecondPrivateRouteTable
  FirstPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: FirstPublicRouteTable
  SecondPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: SecondPublicRouteTable
  #############################################################################
  # Subnet Route Table Associations
  #----------------------------------------------------------------------------
  FirstPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FirstPublicRouteTable
      SubnetId:
        Ref: FirstPublicSubnet
  FirstPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FirstPrivateRouteTable
      SubnetId:
        Ref: FirstPrivateSubnet
  FirstPrivateRDSSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FirstPrivateRouteTable
      SubnetId:
        Ref: FirstPrivateRDSSubnet
  SecondPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SecondPublicRouteTable
      SubnetId:
        Ref: SecondPublicSubnet
  SecondPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SecondPrivateRouteTable
      SubnetId:
        Ref: SecondPrivateSubnet
  SecondPrivateRDSSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SecondPrivateRouteTable
      SubnetId:
        Ref: SecondPrivateRDSSubnet
  #############################################################################
  # Internet Gateway
  #----------------------------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: Region
            - '-'
            - Ref: Environs
            - '-'
            - Ref: Spoke
            - '-'
            - Ref: AppName
#  EIP1:
#    Type: AWS::EC2::EIP
#    Properties:
#      Domain: vpc
#  EIP2:
#    Type: AWS::EC2::EIP
#    Properties:
#      Domain: vpc
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
#  FirstNatGateway:
#    Type: AWS::EC2::NatGateway
#    Properties:
#      AllocationId:
#        Fn::GetAtt:
#          - EIP1
#          - AllocationId
#      SubnetId:
#        Ref: FirstPublicSubnet
#  SecondNatGateway:
#    Type: AWS::EC2::NatGateway
#    Properties:
#      AllocationId:
#        Fn::GetAtt:
#          - EIP2
#          - AllocationId
#      SubnetId:
#        Ref: SecondPublicSubnet
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
#          - EIP2
          - EIP
          - AllocationId
      SubnetId:
        Ref: SecondPublicSubnet
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: Vpc
Outputs:
  FirstPrivateSubnet:
    Description: Vpc first private subnet
    Value:
      Ref: FirstPrivateSubnet
  FirstPrivateRDSSubnet:
    Description: Vpc first private RDS subnet
    Value:
      Ref: FirstPrivateRDSSubnet
  FirstPublicSubnet:
    Description: Vpc first public subnet
    Value:
      Ref: FirstPublicSubnet
  SecondPrivateSubnet:
    Description: Vpc second private subnet
    Value:
      Ref: SecondPrivateSubnet
  SecondPrivateRDSSubnet:
    Description: Vpc second private RDS subnet
    Value:
      Ref: SecondPrivateRDSSubnet
  DBSubnetGroup:
    Description: Vpc database subnet group
    Value:
      Ref: DBSubnetGroup
  SecondPublicSubnet:
    Description: Vpc second public subnet
    Value:
      Ref: SecondPublicSubnet
  SecurityGroup:
    Description: Common security group to whole column
    Value:
      Ref: SecurityGroup
  FirstPublicRouteTable:
    Description: First Public Route Table
    Value:
      Ref: FirstPublicRouteTable
  SecondPublicRouteTable:
    Description: Second Public Route Table
    Value:
      Ref: SecondPublicRouteTable
  FirstPrivateRouteTable:
    Description: First Private Route Table
    Value:
      Ref: FirstPrivateRouteTable
  SecondPrivateRouteTable:
    Description: Second Private Route Table
    Value:
      Ref: SecondPrivateRouteTable
  Vpc:
    Description: Vpc column
    Value:
      Ref: Vpc
  FirstAvailabilityZone:
    Description: First availability zone
    Value:
      Ref: AZ1
  SecondAvailabilityZone:
    Description: First availability zone
    Value:
      Ref: AZ2
